[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dynoagent"
version = "0.1.0"
description = "A Python package for managing and orchestrating AI agents in a team environment"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
    { name = "Vahid Salami", email = "vahid.salami@izoon.com" }
]
maintainers = [
    { name = "Vahid Salami", email = "vahid.salami@izoon.com" }
]
keywords = ["ai", "agents", "team", "orchestration", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy>=1.24.0",
    "networkx>=3.0",
]
urls = { 
    "Homepage" = "https://github.com/izoon/dynoagent",
    "Repository" = "https://github.com/izoon/dynoagent.git",
    "Issues" = "https://github.com/izoon/dynoagent/issues",
    "Documentation" = "https://github.com/izoon/dynoagent#readme"
}

[project.optional-dependencies]
dev = [
    "pytest>=8.2.0,<9.0.0",
    "pytest-cov>=6.0",
    "pytest-asyncio>=0.26.0",
    "flake8>=7.0.0",
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<5.13.0",
]

[tool.setuptools]
packages = ["dynoagent"]
package-dir = {"" = "."}

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function" 